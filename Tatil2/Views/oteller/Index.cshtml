@model Tatil2.Models.DTO.OtelFiltreleDTO

<h2 class="mb-0">Otel Filtreleme</h2>
<style>
	.sinif{
		margin-top: 22px;
		margin-bottom: 2rem;
	}
	.kontrol{
		display: block;
		width: 90%;
	}
	.form-group1{
		padding: 10px;
		font-size: 0px;
		font-weight: bold;
		flex-wrap: nowrap;
		
	}
	.filtre{
		color: white;
		background-color: #3d2224;
		font-size: 16px;
		padding: 5px;
		margin-top: 44px;
		margin-right: 30px;
		margin-left: 25px;
	}
	.row1{
		--bs-gutter-x: 1.5rem;
		--bs-gutter-y: 0;
		display: flex;
		flex-wrap: nowrap;
		margin-top: calc(-1 * var(--bs-gutter-y));
		margin-right: calc(-.5 * var(--bs-gutter-x));
		/* margin-left: calc(-.5 * var(--bs-gutter-x)); */
		/* width: 70%; */
		/* padding: 5px; */
		/* margin: 0px 5px; */
		border-radius: 5px;
		/* border: 1px solid #ddd; */
		font-size: 15px;
		box-sizing: border-box;
		transition: 0.3s ease;
	}

	.mb-0 {
		text-align: center;
	/* 	color: #3d2224; */
		font-size: 36px;
		font-weight: bold;
		margin-bottom: 20px;
	}
</style>


<form id="otelSearchForm" class="row p-0" method="post">

	<div class="sidebarcontainer col-md-3">

		<div class="sidebar">
			@* <form method="get" action="@Url.Action("Index", "Otel")"> *@
			<div class="form-group">
				<label for="Ara">Ara</label>
				<input type="text" id="Ara" name="Ara" class="form-control" value="@Model.Ara" />
			</div>

			<div class="form-group1">
				
				@foreach (var tag in Model.OtelTag)
				{
					<label>
						<input type="checkbox" name="TagId" value="@tag.Id"
						@(Model.TagId != null && Model.TagId.Contains(tag.Id) ? "checked" : "") />
						@tag.Ad
					</label>

					<br />
				}
			</div>

			<div class="form-group">
				<label>Min Puan:</label>
				<input type="number" name="MinPuan" step="0.1" min="0" max="10" value="@Model.MinPuan" class="form-control" />
			</div>

			<div class="form-group">
				<label>Max Puan:</label>
				<input type="number" name="MaxPuan" step="0.1" min="0" max="10" value="@Model.MaxPuan" class="form-control" />
			</div>		
			@* </form> *@
		</div>

	</div>
	<div class="otelSearchFormContainer col-md-8">

		<div class="row1">

			@{
				var bugun = DateTime.Today.ToString("yyyy-MM-dd");
			}

			<div class="form-group col-md-3">
				<label for="BaslangicTarihi">Giriş Tarihi</label>
				<input type="date" id="BaslangicTarihi" name="BaslangicTarihi"
					   class="kontrol"
					   value="@Model.BaslangicTarihi?.ToString("yyyy-MM-dd")"
					   min="@bugun" required />
			</div>
			
			<div class="form-group col-md-3">
				<label for="BitisTarihi">Çıkış Tarihi</label>
				<input type="date" id="BitisTarihi" name="BitisTarihi"
					   class="kontrol"
					   value="@Model.BitisTarihi?.ToString("yyyy-MM-dd")"
					   min="@bugun" required />
			</div>

			<div class="form-group col-md-3">
				<label for="KisiSayisi">Kişi Sayısı</label>
				<input type="number" id="KisiSayisi" name="KisiSayisi" class="form-control" value="@Model.KisiSayisi" min="1" />
			</div>
			<div>
				<button type="submit" class="filtre">Filtrele</button>
			</div>
			
		</div>


		@if (Model.Oteller == null || !Model.Oteller.Any())
		{

		}
		else
		{
			foreach (var otel in Model.Oteller)
			{
				<div class="otel">
					<h3>@otel.Ad</h3>
					<img src="@otel.Poster" alt="Otel Resmi" class="img-fluid" />
					<p class="sinif"><strong>Konum:</strong> @otel.Konum</p>
					<p class="sinif">@otel.Aciklama</p>

					<a href="@Url.Action("Incele", "Oteller", new { id = otel.Id, BaslangicTarihi = Model.BaslangicTarihi.Value.ToString("yyyy-MM-dd"), BitisTarihi = Model.BitisTarihi.Value.ToString("yyyy-MM-dd"), KisiSayisi = Model.KisiSayisi })" class="btn btn-primary">İncele</a>

					<hr />
				</div>
			}
		}
	</div>


</form>









<script>
		
	const baslangicInput = document.getElementById('BaslangicTarihi');
		const bitisInput = document.getElementById('BitisTarihi');

		// Sayfa yüklendiğinde ve giriş tarihi değiştiğinde tetiklenir
		function updateBitisMinTarihi() {
			const baslangicTarihi = baslangicInput.value;
			if (baslangicTarihi) {
				bitisInput.min = baslangicTarihi;

				// Eğer seçilmiş çıkış tarihi artık geçersizse, sıfırla
				if (bitisInput.value < baslangicTarihi) {
					bitisInput.value = baslangicTarihi;
				}
			}
		}

		baslangicInput.addEventListener('change', updateBitisMinTarihi);
		window.addEventListener('DOMContentLoaded', updateBitisMinTarihi);
	document.addEventListener("DOMContentLoaded", function () {
		const today = new Date().toISOString().split('T')[0];
		document.getElementById("BaslangicTarihi").setAttribute("min", today);
		document.getElementById("BitisTarihi").setAttribute("min", today);

		const form = document.getElementById("otelSearchForm");

		form.addEventListener("submit", function (e) {
			e.preventDefault();


			const baslangic = document.getElementById("BaslangicTarihi").value;
			const bitis = document.getElementById("BitisTarihi").value;
			const kisiSayisi = document.getElementById("KisiSayisi").value;

			if (!baslangic || !bitis || !kisiSayisi) {
				alert("Lütfen Giriş Tarihi, Çıkış Tarihi ve Kişi Sayısı alanlarını doldurunuz.");
				return;
			}

		const formData = new FormData(form);

			fetch('@Url.Action("Index2", "Oteller")', {
				method: 'POST',
				body: formData,
			})
			.then(response => {
				if (!response.ok) {
					throw new Error("İşlem başarısız.");
				}
				// return response.text(); // veya response.json() bekliyorsan
			})
			// .then(data => {
			// 	// Geri dönen HTML'i ya da sonucu DOM'a ekle
			// 	// Örneğin:
			// 	document.body.innerHTML = data;
			}/* ) */
			.catch(error => {
				console.error("Hata:", error);
				alert("Bir hata oluştu. Lütfen tekrar deneyin.");
			});
		});
	});
</script>
